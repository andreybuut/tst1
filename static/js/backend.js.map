{"version":3,"sources":["ui/backend/apps/config.js"],"names":["common","BASE_URL","local","Object","assign","api","host","development","staging","production","getConfig","window","location","hostname","config","getItem","key","setItem","value","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,IAAMA,SAAS,EAAf;;AAEA,IAAMC,WAAW,UAAjB;;AAEA;AACA;AACA;AACA,IAAMC,QAAQC,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,EAA0B;AACtCK,OAAK;AACHC,oCAA8BL;AAD3B;AADiC,CAA1B,CAAd;;AAMA;AACA;AACA;AACA,IAAMM,cAAcJ,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,EAA0B;AAC5CK,OAAK;AACHC,UAAML;AADH;AADuC,CAA1B,CAApB;;AAMA;AACA;AACA;AACA,IAAMO,UAAUL,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,EAA0B;AACxCK,OAAK;AACHC,UAAML;AADH;AADmC,CAA1B,CAAhB;;AAMA;AACA;AACA;AACA,IAAMQ,aAAaN,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,EAA0B;AAC3CK,OAAK;AACHC,UAAML;AADH;AADsC,CAA1B,CAAnB;;AAMA;;;;AAIA,SAASS,SAAT,GAAsB;AACpB,UAAQC,OAAOC,QAAP,CAAgBC,QAAxB;AACE,SAAK,WAAL,CADF,CACoB;;AAElB,SAAK,WAAL;AACE,aAAOX,KAAP;;AAEF,SAAK,eAAL;AACE,aAAOK,WAAP;;AAEF,SAAK,eAAL;AACE,aAAOC,OAAP;;AAEF,SAAK,gBAAL;AACE,aAAOC,UAAP;;AAEF;AACE;AACA;AACA;AACA,aAAOA,UAAP;AAnBJ;AAqBD;;AAED;;;AAGA,IAAMK,SAASX,OAAOC,MAAP,CAAc,EAAd,EAAkBM,WAAlB,CAAf;;AAEA;;;;;;;AAOA,SAASK,OAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOA,OAAOF,MAAP,GAAgBA,OAAOE,GAAP,CAAhB,GAA8B,IAArC;AACD;;AAED;;;;;;;;AAQA,SAASC,OAAT,CAAkBD,GAAlB,EAAuBE,KAAvB,EAA8B;AAC5BJ,SAAOE,GAAP,IAAcE,KAAd;AACD;;AAEDf,OAAOC,MAAP,CAAcU,MAAd,EAAsB;AACpBC,kBADoB;AAEpBE;AAFoB,CAAtB;;AAKAE,OAAOC,OAAP,GAAiBN,MAAjB","file":".ui/js/backend.js","sourcesContent":["// -------------------------------------------------------\n// Common config values should go here\n// =======================================================\nconst common = {};\n\nconst BASE_URL = '/api/v1/';\n\n// -------------------------------------------------------\n// Local config\n// =======================================================\nconst local = Object.assign({}, common, {\n  api: {\n    host: `http://localhost:8000${BASE_URL}`,\n  },\n});\n\n// -------------------------------------------------------\n// Development config\n// =======================================================\nconst development = Object.assign({}, common, {\n  api: {\n    host: BASE_URL,\n  },\n});\n\n// -------------------------------------------------------\n// Staging config\n// =======================================================\nconst staging = Object.assign({}, common, {\n  api: {\n    host: BASE_URL,\n  },\n});\n\n// -------------------------------------------------------\n// Production config\n// =======================================================\nconst production = Object.assign({}, common, {\n  api: {\n    host: BASE_URL,\n  },\n});\n\n/**\n * Returns the configuration based on domain\n * @returns {object}\n */\nfunction getConfig () {\n  switch (window.location.hostname) {\n    case 'localhost': // fallthrough\n\n    case '127.0.0.1':\n      return local;\n\n    case 'd-hosting.com':\n      return development;\n\n    case 's-hosting.com':\n      return staging;\n\n    case 'yourdomain.com':\n      return production;\n\n    default:\n      // we do not know yet production server DNS so we use production\n      // environment by default\n      // throw new Error(`Unknown environment: ${window.location.hostname}`);\n      return production;\n  }\n}\n\n/**\n * Define actual configuration to be used\n */\nconst config = Object.assign({}, getConfig());\n\n/**\n * @summary Returns the configuration parameter.\n *\n * @author Dmitry Semenov\n *\n * @param {str} key - config's key\n */\nfunction getItem (key) {\n  return key in config ? config[key] : null;\n}\n\n/**\n * @summary Sets the configuration parameter.\n *\n * @author Dmitry Semenov\n *\n * @param {str} key - config's key\n * @param {str|number|boolean} value - config's key value\n */\nfunction setItem (key, value) {\n  config[key] = value;\n}\n\nObject.assign(config, {\n  getItem,\n  setItem,\n});\n\nmodule.exports = config;\n"]}